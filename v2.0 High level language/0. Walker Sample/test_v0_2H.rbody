// Imagine we have a walking robot with 7 segments (2 thigh, 2 shank, 1 torso, 2 hands) standing on a slope.

/*
Unnamed literal: "(1.0, 2.0, 3.0)" 
Named literal: "vector MyVector (1.0, 2.0, 3.0)" 
Reference to a named literal: "MyVector"
*/

//vector DefaultFramePosition (0.0, 0.0, 0.0)
// Let's assume the default frame position is at each joint

// Joint types
Revolute(vector v) // v is the vector of rotation axes. x=1, 2, 3 for x, y, z
Planar(vector l) // l is the vector of translation directions
// There is no need to define matrices. The matlab code does that.   

// External load types
force()
torque()

//Constraint type:
geometrical()
velocity()

// reorient
Reorient(vector a, vector v) // a is the axes vector, v is the rotation values

world {
	gravity (9.81*cos(pi/3), 0.0, 9.81*sin(pi/3)) // inclined slope under the walkers' feet
}

system DynamicWalker {
	body shank1 {
		// Lets assume each body reference frame is attached to the body first defined joint.
		
		mass {
			value 1.0
			position (0.0, 0.0, 0.5)
			inertia [1.0e-3.0 0.0 0.0
					0.0 1.0e-3.0 0.0
					0.0 0.0 1.0e-3.0]
		}
	}
	
	body thigh1 {
			value 1.0
			position (0.0, 0.0, 0.5)
			inertia [1.0e-3.0 0.0 0.0
					0.0 1.0e-3.0 0.0
					0.0 0.0 1.0e-3.0]
		}
	}
	
	body shank2 {
		
		mass {
			value 1.0
			position (0.0, 0.0, -0.5)
			inertia [1.0e-3.0 0.0 0.0
					0.0 1.0e-3.0 0.0
					0.0 0.0 1.0e-3.0]
		}
	}
	
	body thigh2 {
			value 1.0
			position (0.0, 0.0, -0.5)
			inertia [1.0e-3.0 0.0 0.0
					0.0 1.0e-3.0 0.0
					0.0 0.0 1.0e-3.0]
		}
	}
	
	body torso {
	
		mass {
			value 1.5
			position (0.0, 0.0, 0.5)
			inertia [2.0e-3.0 0.0 0.0
					0.0 2.0e-3.0 0.0
					0.0 0.0 2.0e-3.0]
		}
	}
	
	body hand1 {
			value 1.0
			position (0.0, 0.0, -0.5)
			inertia [1.0e-3.0 0.0 0.0
					0.0 1.0e-3.0 0.0
					0.0 0.0 1.0e-3.0]
		}
	}
	
	body hand2 {
			value 1.0
			position (0.0, 0.0, -0.5)
			inertia [1.0e-3.0 0.0 0.0
					0.0 1.0e-3.0 0.0
					0.0 0.0 1.0e-3.0]
	}
	
	joint ankle : Revolute(vector (2))
		between base (with relative transformation [(0 0 0), reorient(0,0)])
		and shank1 (with relative transformation [(0 0 0), reorient(0,0)])
		stiffness (springCoeff, springInit, dampViscous, dampCoulomb)
			                                            
	joint knee1 : Revolute(vector (2))
		between shank1 (with relative transformation [(0 0 1.0), reorient(0,0)])
		and thigh1 (with relative transformation [(0 0 0), reorient(0,0)])
		stiffness (springCoeff, springInit, dampViscous, dampCoulomb)
		
	joint hip1 : Revolute(vector (2))
		between thigh1 (with relative transformation [(0 0 1.0), reorient(0,0)])
		and thigh2 (with relative transformation [(0 0 0), reorient(0,0)])
		stiffness (springCoeff, springInit, dampViscous, dampCoulomb)
		
	joint knee2 : Revolute(vector (2))
		between thigh2 (with relative transformation [(0 0 -1.0), reorient(0,0)])
		and shank2 (with relative transformation [(0 0 0), reorient(0,0)])
		stiffness (springCoeff, springInit, dampViscous, dampCoulomb)
		
	joint hip2 : Revolute(vector (2, 1, 3))
		between thigh1 (with relative transformation [(0 0 0), reorient(0,0)])
		and torso (with relative transformation [(0 0 0), reorient(0,0)])
		stiffness (springCoeff, springInit, dampViscous, dampCoulomb)
		
	joint shoulder1 : Revolute(vector (1))
		between torso (with relative transformation [(0 0 1.0), reorient(0,0)])
		and hand1 (with relative transformation [(0 0 0), reorient(0,0)])
		stiffness (springCoeff, springInit, dampViscous, dampCoulomb)
		
	joint shoukder2 : Revolute(vector (1))
		between base (with relative transformation [(0 0 1.0), reorient(0,0)])
		and hand2 (with relative transformation [(0 0 0), reorient(0,0)])
		stiffness (springCoeff, springInit, dampViscous, dampCoulomb)
		
		
	constraint foot2 : geometrical
		between shank2 (with relative transformation [(0 0 -1.0), reorient(0,0)])
		and base (with relative transformation [(0 1.0 0), reorient(0,0)])	

		
	externalLoad foot2 : force
		between shank1 (with relative transformation [(0 0 0), reorient(0,0)])
		and base (with relative transformation [(0 0 0), reorient(0,0)])	
		
	externalForce foot2 : force
		between shank2 (with relative transformation [(0 0 -1.0), reorient(0,0)])
		and base (with relative transformation [(0 1.0 0), reorient(0,0)])
		
}