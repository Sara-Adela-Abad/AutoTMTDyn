// Imagine we have a ser of 8 rigid snake scales attached on a helical spring.

stiffness DefaultStiffness {
	springCoeff 0.0
	springInit 0.0
	dampViscous 0.1
	dampCoulomb 0.0
}


joint type XRevolve revolute x with DefaultStiffness
 

world {
	gravity [0.0, 0.0, -9.81]
}

system DynamicWalker {
	body scale {
		mass {
			value 1.0
			position [0.5, 0.0, -0.5]
			inertia matrix DefaultInertia [1.0e-3.0, 0.0,      0.0,
					                       0.0,      1.0e-3.0, 0.0,
				                           0.0,      0.0,      1.0e-3.0]
		}
	}
	

	joint hing1 : XRevolve start
		between scale (with relative transformation matrix Origin [0.0, 0.0, 1.0], reorient NoReorient [])
		and base


	// Repeat another 7 copies
	// I add equal base here to show symmetry constraint. It should put jkd(4,1,this joint number) = joint base number;
	repeat(7) : body scale + joint hing2 : XRevolve start
		between scale (with relative transformation matrix Origin [1.0, 0.0, -1.0], reorient YReorient [2.0, pi/2])
		and scale(equal hing1)


	// We had base and another 7 copies. I assume we save them in scale and scale_copy[7]
	external load tip : force
		at scale_copy(7) (with relative transformation matrix Tip [1.0, 0.0, -1.0], reorient YReorient )
}
